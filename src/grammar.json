{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "nftest",
  "word": "identifier",
  "rules": {
    "source_file": {
      "type": "SYMBOL",
      "name": "suite"
    },
    "suite": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "nextflow_process"
            },
            {
              "type": "STRING",
              "value": "nextflow_workflow"
            },
            {
              "type": "STRING",
              "value": "nextflow_pipeline"
            },
            {
              "type": "STRING",
              "value": "nextflow_function"
            }
          ]
        },
        {
          "type": "FIELD",
          "name": "body",
          "content": {
            "type": "SYMBOL",
            "name": "suite_block"
          }
        }
      ]
    },
    "suite_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "top_level_declaration"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "setup_block"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "test_block"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "setup_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "setup"
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "run_block"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "run_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "run_header"
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "script_stmt"
              },
              {
                "type": "SYMBOL",
                "name": "invocation"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "run_header": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "run"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "FIELD",
          "name": "identifier",
          "content": {
            "type": "SYMBOL",
            "name": "quoted_identifier"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": ","
                },
                {
                  "type": "STRING",
                  "value": "alias"
                },
                {
                  "type": "STRING",
                  "value": ":"
                },
                {
                  "type": "FIELD",
                  "name": "alias",
                  "content": {
                    "type": "SYMBOL",
                    "name": "quoted_identifier"
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "test_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "test_header"
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "tag_stmt"
              },
              {
                "type": "SYMBOL",
                "name": "options_stmt"
              },
              {
                "type": "SYMBOL",
                "name": "config_stmt"
              },
              {
                "type": "SYMBOL",
                "name": "setup_block"
              },
              {
                "type": "SYMBOL",
                "name": "when_block"
              },
              {
                "type": "SYMBOL",
                "name": "then_block"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "test_header": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "test"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "string"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "when_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "when"
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "params_block"
              },
              {
                "type": "SYMBOL",
                "name": "invocation"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "params_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "params"
        },
        {
          "type": "SYMBOL",
          "name": "groovy_block"
        }
      ]
    },
    "then_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "then"
        },
        {
          "type": "SYMBOL",
          "name": "groovy_block"
        }
      ]
    },
    "invocation": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "type",
          "content": {
            "type": "SYMBOL",
            "name": "invocable_unit"
          }
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "SYMBOL",
          "name": "groovy_triple_string"
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "top_level_declaration": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "name_stmt"
        },
        {
          "type": "SYMBOL",
          "name": "unit_stmt"
        },
        {
          "type": "SYMBOL",
          "name": "config_stmt"
        },
        {
          "type": "SYMBOL",
          "name": "options_stmt"
        },
        {
          "type": "SYMBOL",
          "name": "tag_stmt"
        },
        {
          "type": "SYMBOL",
          "name": "script_stmt"
        },
        {
          "type": "SYMBOL",
          "name": "profile_stmt"
        }
      ]
    },
    "tag_stmt": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "tag"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        }
      ]
    },
    "script_stmt": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "script"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        }
      ]
    },
    "options_stmt": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "options"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        }
      ]
    },
    "config_stmt": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "config"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        }
      ]
    },
    "unit_stmt": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "invocable_unit"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        }
      ]
    },
    "name_stmt": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "name"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        }
      ]
    },
    "profile_stmt": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "profile"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        }
      ]
    },
    "groovy_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "FIELD",
          "name": "groovy",
          "content": {
            "type": "REPEAT",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "groovy_code"
                },
                {
                  "type": "SYMBOL",
                  "name": "brace_block"
                }
              ]
            }
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "groovy_code": {
      "type": "PATTERN",
      "value": "[^{}]+"
    },
    "brace_block": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "groovy_code"
              },
              {
                "type": "SYMBOL",
                "name": "brace_block"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "string": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "double_string"
        },
        {
          "type": "SYMBOL",
          "name": "single_string"
        }
      ]
    },
    "double_string": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "escape_sequence"
              },
              {
                "type": "PATTERN",
                "value": "[^\"\\\\\\n]"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "single_string": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "'"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "escape_sequence"
              },
              {
                "type": "PATTERN",
                "value": "[^'\\\\\\n]"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "'"
        }
      ]
    },
    "triple_string": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\"\"\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "escape_sequence"
              },
              {
                "type": "PATTERN",
                "value": "[^\"\\\\\\n]"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "\"\"\""
        }
      ]
    },
    "groovy_triple_string": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\"\"\""
        },
        {
          "type": "FIELD",
          "name": "groovy",
          "content": {
            "type": "REPEAT",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "groovy_code"
                },
                {
                  "type": "SYMBOL",
                  "name": "brace_block"
                }
              ]
            }
          }
        },
        {
          "type": "STRING",
          "value": "\"\"\""
        }
      ]
    },
    "escape_sequence": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "\\"
          },
          {
            "type": "PATTERN",
            "value": "."
          }
        ]
      }
    },
    "quoted_identifier": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "double_quoted_identifier"
        },
        {
          "type": "SYMBOL",
          "name": "single_quoted_identifier"
        }
      ]
    },
    "double_quoted_identifier": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "FIELD",
          "name": "identifier",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "single_quoted_identifier": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "'"
        },
        {
          "type": "FIELD",
          "name": "identifier",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "STRING",
          "value": "'"
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[A-Za-z_][A-Za-z0-9_]*"
    },
    "number": {
      "type": "PATTERN",
      "value": "\\d+(?:\\.\\d+)?"
    },
    "invocable_unit": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "process"
        },
        {
          "type": "STRING",
          "value": "workflow"
        },
        {
          "type": "STRING",
          "value": "function"
        }
      ]
    },
    "line_comment": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "//"
          },
          {
            "type": "PATTERN",
            "value": "[^\\n]*"
          }
        ]
      }
    },
    "block_comment": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "/*"
          },
          {
            "type": "PATTERN",
            "value": "[^*]*\\*+([^/*][^*]*\\*+)*"
          },
          {
            "type": "STRING",
            "value": "/"
          }
        ]
      }
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    },
    {
      "type": "SYMBOL",
      "name": "line_comment"
    },
    {
      "type": "SYMBOL",
      "name": "block_comment"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}